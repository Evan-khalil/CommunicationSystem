@using Microsoft.AspNetCore.Identity
@inject SignInManager<Person> SignInManager
@inject UserManager<Person> UserManager
@inject IPersonRepository PersonRepository

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await PersonRepository.GetByUserName(User.Identity?.Name);
        <li class="nav-item">
            <a class="nav-link text-light" asp-controller="Search" asp-action="Index"><i class="fas fa-search"></i></a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-controller="Account" asp-action="Index" title="Manage">Hej @user.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-light">Logga ut</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Registrera dig</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Logga in</a>
        </li>
    }
</ul>