@using Microsoft.AspNetCore.Identity
@using CommunicationApp.Views.Account

@inject SignInManager<Person> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-action="Index" asp-controller="Account">Personuppgifter</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-action="ChangePassword">Lösenord</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="change-mail" asp-action="Email">E-post</a></li>
    @if (User.IsInRole("Admin"))
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.RoleNavClass(ViewContext)" id="role" asp-action="Role">Hantera behörighet</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.DeleteUserNavClass(ViewContext)" id="delete-user" asp-action="DeleteUser">Ta bort användare</a></li>
    }
</ul>